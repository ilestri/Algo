import{p as i,m as p}from"./steps-C4T7tiBa.js";import{n as l}from"./normalize-array-input-DMzkLNrw.js";function u(a){const t=a.array.slice(),n=[],s=t.length;for(let r=1;r<s;r++){const o=t[r];i(n,"highlight",{i:r},[1],`i=${r} 위치의 값을 삽입 정렬`),i(n,"pointer",{name:"key",index:r},[2],`key=A[${r}]=${o}`);let e=r-1;for(;e>=0&&t[e]>o;)i(n,"compare",{i:e,key:o},[3],`A[${e}](${t[e]}) > key(${o}) 비교`),t[e+1]=t[e],i(n,"setValue",{index:e+1,value:t[e]},[4],`A[${e+1}] ← A[${e}] (${t[e]})`),e--;t[e+1]=o,i(n,"setValue",{index:e+1,value:o},[5],`A[${e+1}] ← key (${o})`)}return p(n,s,[5]),n}const m={id:"sorting/insertion",category:"sorting",title:"삽입 정렬 (Insertion Sort)",pseudocode:["for i ← 1 to n-1","  key ← A[i]; j ← i-1","  while j ≥ 0 and A[j] > key","    A[j+1] ← A[j]; j ← j-1","  A[j+1] ← key"],complexity:{best:"O(n)",average:"O(n^2)",worst:"O(n^2)",space:"O(1)"},defaultInput:{array:[10,3,7,2,5,8]},normalizeInput:l};export{m as descriptor,u as stepsOf};
