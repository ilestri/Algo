import{m as l,p as a}from"./steps-C4T7tiBa.js";import{n as m}from"./normalize-array-input-DMzkLNrw.js";import{s as c}from"./array-utils-BfWpXnYT.js";function d(u){const e=u.array.slice(),s=[];function f(r,o,n){a(s,"highlightRange",{l:r,r:o},[3],`구간 [${r}, ${o}] 파티션`);let t=r;for(let i=r;i<o;i++)a(s,"compare",{i,j:n},[5],`인덱스 ${i}와 피벗 ${n} 비교`),e[i]<e[n]&&(c(e,t,i),a(s,"swap",{i:t,j:i},[6],`인덱스 ${t}와 ${i} 교환`),t++);return c(e,t,n),a(s,"swap",{i:t,j:n},[6],`인덱스 ${t}와 ${n} 교환`),t}function p(r,o){if(r>=o)return;const t=f(r,o,o);p(r,t-1),p(t+1,o)}return p(0,e.length-1),l(s,e.length,[1]),s}const h={id:"sorting/quick",category:"sorting",title:"퀵 정렬 (Quick Sort)",pseudocode:["procedure quickSort(A, l, r)","  if l ≥ r: return","  p ← r; i ← l","  for j ← l to r-1","    if A[j] < A[p]","      swap A[i], A[j]","      i ← i+1","  swap A[i], A[p]","  quickSort(A, l, i-1)","  quickSort(A, i+1, r)"],complexity:{best:"O(n log n)",average:"O(n log n)",worst:"O(n^2)",space:"O(log n)"},defaultInput:{array:[10,3,7,2,5,8]},normalizeInput:m};export{h as descriptor,d as stepsOf};
